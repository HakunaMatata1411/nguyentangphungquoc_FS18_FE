// Viết func đổ bảng giá coin ra màn hình cho người dùng

<style>
    tr th{
	font-weight:bold;
    }
tr th, tr td{
	padding:5px;
}
th{
    border: 5px solid #C1DAD7;
}
td{
	border: 5px solid #C1DAD7;
}
.c1{
	background:#4b8c74;
}
.c2{
	background:#74c476;
}
.c3{
	background:#a4e56d;
}
.c4{
	background:#cffc83;
}
</style>

[
  {
    "id": 1,
    "name": "Bitcoin",
    "price": 19340.953647943366,
    "percent_change_24h": 3.18974865,
    "percent_change_1h": 0.13874144
  },
  {
    "id": 1027,
    "name": "Ethereum",
    "price": 1319.766681320235,
    "percent_change_24h": 3.07108724,
    "percent_change_1h": 0.09324792
  },
  {
    "id": 825,
    "name": "Tether",
    "price": 1.0000356256544913,
    "percent_change_24h": 0.00616275,
    "percent_change_1h": -0.00081655
  },
  {
    "id": 3408,
    "name": "USD Coin",
    "price": 0.9999707419817206,
    "percent_change_24h": -0.01333926,
    "percent_change_1h": 0.00731704
  },
  {
    "id": 1839,
    "name": "BNB",
    "price": 280.4971307183375,
    "percent_change_24h": 3.86797039,
    "percent_change_1h": -0.07656999
  },
  {
    "id": 52,
    "name": "XRP",
    "price": 0.4378728623269723,
    "percent_change_24h": 3.59775661,
    "percent_change_1h": 0.24123988
  },
  {
    "id": 4687,
    "name": "Binance USD",
    "price": 0.9998212428351202,
    "percent_change_24h": -0.04704566,
    "percent_change_1h": 0.03799726
  },
  {
    "id": 2010,
    "name": "Cardano",
    "price": 0.43205242562096685,
    "percent_change_24h": 0.46973443,
    "percent_change_1h": -0.0513443
  },
  {
    "id": 5426,
    "name": "Solana",
    "price": 33.29481291691432,
    "percent_change_24h": 3.62047747,
    "percent_change_1h": -0.06248286
  },
  {
    "id": 74,
    "name": "Dogecoin",
    "price": 0.06011837389674329,
    "percent_change_24h": 0.9993402,
    "percent_change_1h": -0.16297579
  }
]

let getCoin = document.getElementById('coin');
const coinInfo = (arr) => {
    let xHtml = "";
    for (const i of arr) {
        xHtml += `
        <tr>
            <td>${i.name}</td>
            <td>${parseFloat(i.price).toFixed(3)}</td>
            <td>${parseFloat(i.percent_change_24h).toFixed(3)}</td>
            <td>${parseFloat(i.percent_change_1h).toFixed(3)}</td>
        </tr>`
    }
    getCoin.innerHTML = xHtml;
}
coinInfo(valueCoin);

let getPrizeOfCoin=document.querySelector('tbody')
let render=(arr)=>{
  let result=''
  for (const i of arr){
    result +=`<tr>
              <td>${i['name']}</td>
              <td>${parseFloat((i['price']).toFixed(2))}</td>
              <td>${parseFloat((i['percent_change_24h']).toFixed(2))}%</td>
              <td>${parseFloat((i['percent_change_1h']).toFixed(2))}%</td>
              <tr>` 
}
  return coin.innerHTML=result
}
console.log(render(detailtCoin))

=====================================

Thêm class title vào thẻ h1
Thay thế class sub-title ở thẻ p bằng class content

<!DOCTYPE html>
<html>
<head>
    <title>Document</title>
</head>
<body>
    <h1>Title</h1>
    <p class="sub-title">Content</p>
</body>
</html>

let new_H1=document.getElementsByTagName('h1')[0]
new_H1.classList.add("title")
let new_P=document.getElementsByTagName('p')[0]
new_P.classList.remove("sub-title")
new_P.classList.add("content")

let boxH1=document.querySelector('h1')
let boxP=document.querySelector('p')
boxH1.classList.add('title')
boxP.classList.replace('sub-title','content')